import{_ as s,c as i,o as e,ag as a}from"./chunks/framework.CJfFYpDD.js";const k=JSON.parse('{"title":"tools","description":"","frontmatter":{},"headers":[],"relativePath":"cyber/tools.md","filePath":"cyber/tools.md"}'),o={name:"cyber/tools.md"};function l(p,t,r,h,d,n){return e(),i("div",null,t[0]||(t[0]=[a('<h1 id="tools" tabindex="-1">tools <a class="header-anchor" href="#tools" aria-label="Permalink to &quot;tools&quot;">​</a></h1><h2 id="gobuster" tabindex="-1">Gobuster <a class="header-anchor" href="#gobuster" aria-label="Permalink to &quot;Gobuster&quot;">​</a></h2><p>Gobuster 是一个用 Go 语言编写的命令行工具，主要用于目录和文件的暴力破解以及 DNS 子域名的暴力破解。它非常适合用于渗透测试和安全评估，帮助发现隐藏的目录、文件和子域名。</p><p>Gobuster 的主要功能包括：</p><ul><li>目录和文件暴力破解：通过字典文件尝试访问目标服务器上的隐藏目录和文件。</li><li>DNS 子域名暴力破解：通过字典文件尝试发现目标域名的子域名。</li><li>S3 存储桶暴力破解：尝试发现 AWS S3 存储桶。</li></ul><p>Gobuster 的一些常用选项包括：</p><ul><li><code>-u</code>：指定目标 URL。</li><li><code>-w</code>：指定字典文件路径。</li><li><code>-t</code>：指定并发线程数。</li><li><code>-o</code>：指定输出文件路径。</li></ul><p>示例用法：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gobuster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://example.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/wordlist.txt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.txt</span></span></code></pre></div><p>这个命令会使用 <code>/path/to/wordlist.txt</code> 中的单词列表对 <code>http://example.com</code> 进行目录和文件暴力破解，并将结果保存到 <code>output.txt</code> 文件中。</p>',10)]))}const u=s(o,[["render",l]]);export{k as __pageData,u as default};
