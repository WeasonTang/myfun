import{_ as n,c as s,o as t,j as o,a}from"./chunks/framework.DPDPlp3K.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"go/goIssues.md","filePath":"go/goIssues.md"}'),r={name:"go/goIssues.md"};function l(i,e,O,g,c,d){return t(),s("div",null,e[0]||(e[0]=[o("h2",{id:"go开发过程中遇到的问题",tabindex:"-1"},[a("go开发过程中遇到的问题 "),o("a",{class:"header-anchor",href:"#go开发过程中遇到的问题","aria-label":'Permalink to "go开发过程中遇到的问题"'},"​")],-1),o("h3",{id:"_1、go代码引入自己创建的包-运行时出现-package-包路径-is-not-in-goroot-问题",tabindex:"-1"},[a("1、Go代码引入自己创建的包，运行时出现 package 包路径 is not in GOROOT 问题 "),o("a",{class:"header-anchor",href:"#_1、go代码引入自己创建的包-运行时出现-package-包路径-is-not-in-goroot-问题","aria-label":'Permalink to "1、Go代码引入自己创建的包，运行时出现 package 包路径 is not in GOROOT 问题"'},"​")],-1),o("p",null,"GO111MODULE",-1),o("p",null,"用环境变量 GO111MODULE 开启或关闭模块支持，它有三个可选值：off、on、auto，默认值是 auto。",-1),o("p",null,"GO111MODULE=off 无模块支持，go 会从 GOPATH 和 vendor 文件夹寻找包。 GO111MODULE=on 模块支持，go 会忽略 GOPATH 和 vendor 文件夹，只根据 go.mod 下载依赖。 GO111MODULE=auto 在 $GOPATH/src 外面且根目录有 go.mod 文件时，开启模块支持。 在使用模块的时候，GOPATH 是无意义的，不过它还是会把下载的依赖储存在 $GOPATH/src/mod 中，也会把 go install 的结果放在 $GOPATH/bin 中。",-1),o("p",null,"解决方案：",-1),o("pre",null,[o("code",null,`    将GO111MODULE修改为off，在终端输入 go env -w GO111MODUL
`)],-1)]))}const G=n(r,[["render",l]]);export{u as __pageData,G as default};
